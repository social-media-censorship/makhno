/*
 * Makhno API design
 * The endpoint sequence described here is part of the Makhno suite. The purpose is to define a protocol by which a client can request reachability checks from our infrastructure.  ## There are some reserved words that we use in this document:  `target URL`: this is the URL of a social media platform that we want to monitor. the subjects covered in this framework, are, for the most part. `target URLs`. they can be youtube videos or facebook posts. we are talking about a social media platform URL (not all of them are supported, of course, and different versions prograd in supporting more and more of them)  `availabilityCheck`: is the action by which we verify that a `target URL` is accessible from a certain country.  `vantagePoint`: is a point in the Internet network from which the availabilityCheck is executed to a targetURL. They are identified by the nationality of the internet service provider hosting them.  `agent`: a tool executed from a `vantagePoint`, this tool connects to a `target URL` and verify if the content is reachable or not.  ## The purpose of Makhno, as you can guess, is to map whether a social media content is accessible from a nation or not.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: technology@makhno.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MakhnoApiDesign);
  }
}(this, function(expect, MakhnoApiDesign) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ParseResult', function() {
      beforeEach(function() {
        instance = new MakhnoApiDesign.ParseResult();
      });

      it('should create an instance of ParseResult', function() {
        // TODO: update the code to test ParseResult
        expect(instance).to.be.a(MakhnoApiDesign.ParseResult);
      });

      it('should have the property parsingInfo (base name: "parsingInfo")', function() {
        // TODO: update the code to test the property parsingInfo
        expect(instance).to.have.property('parsingInfo');
        // expect(instance.parsingInfo).to.be(expectedValueLiteral);
      });

      it('should have the property contentFit (base name: "contentFit")', function() {
        // TODO: update the code to test the property contentFit
        expect(instance).to.have.property('contentFit');
        // expect(instance.contentFit).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

    });
  });

}));
